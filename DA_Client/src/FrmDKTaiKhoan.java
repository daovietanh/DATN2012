/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FrmDKTaiKhoan.java
 *
 * Created on Sep 12, 2011, 8:36:26 PM
 */
/**
 *
 * @author VietAnh
 */
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.image.BufferedImage;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.IOException;
import java.rmi.RemoteException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import vn.com.dva.entities.GroupUser;
import vn.com.dva.entities.Users;

public class FrmDKTaiKhoan extends javax.swing.JFrame {

    private byte[] dataImages;
    private byte[] dataImagesU;

    public byte[] getDataImages() {
        return dataImages;
    }

    public byte[] getDataImagesU() {
        return dataImagesU;
    }

    /** Creates new form FrmDKTaiKhoan */
    public FrmDKTaiKhoan() {
        initComponents();
        loadPanel();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel24 = new javax.swing.JLabel();
        txtTraLoi = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        lbl = new javax.swing.JLabel();
        jCbCauHoi = new javax.swing.JComboBox();
        jPanel4 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        txtHoTen = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtDiaChi = new javax.swing.JTextField();
        jDayChooser1 = new com.toedter.calendar.JDayChooser();
        jDate = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        jCbCity = new javax.swing.JComboBox();
        jLabel25 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        txtDienThoai = new javax.swing.JTextField();
        lblPhoto = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        lblCauHoi = new javax.swing.JLabel();
        txtCauHoi = new javax.swing.JTextField();
        btnThem = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        pass2 = new javax.swing.JPasswordField();
        lblDoManh = new javax.swing.JLabel();
        pass = new javax.swing.JPasswordField();
        jLabel3 = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        lblCheck = new javax.swing.JLabel();
        btnHuy = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jCbNhom = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel24.setText("Trả Lời");

        jLabel23.setText("Câu Hỏi Bí Mật");

        lbl.setText("ok");

        jCbCauHoi.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCbCauHoiItemStateChanged(evt);
            }
        });

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Thông tin cá nhân"));

        jLabel7.setText("Họ tên");

        jLabel8.setText("Ngày Sinh");

        jLabel9.setText("Địa chỉ");

        jLabel6.setText("Thành Phố");

        jLabel25.setText("Email");

        jLabel26.setText("Điện Thoại");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel26)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9))
                        .addComponent(jLabel6))
                    .addComponent(jLabel25))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtDienThoai)
                    .addComponent(txtEmail)
                    .addComponent(jCbCity, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtDiaChi)
                    .addComponent(txtHoTen, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE))
                .addContainerGap(57, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtHoTen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel8))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jDate, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jCbCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(27, 27, 27)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel25))
                        .addGap(18, 18, 18)
                        .addComponent(txtDienThoai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel26, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lblPhoto.setBackground(new java.awt.Color(102, 102, 102));
        lblPhoto.setText("jLabel10");
        lblPhoto.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        lblPhoto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblPhotoMouseClicked(evt);
            }
        });

        jButton1.setText("Kiểm tra");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        lblCauHoi.setText("Câu Hỏi");

        btnThem.setText("Đăng Ký");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        jLabel1.setText("Tên đăng nhập");

        pass2.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                pass2CaretUpdate(evt);
            }
        });

        lblDoManh.setForeground(new java.awt.Color(51, 102, 255));
        lblDoManh.setText("Yếu");

        pass.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                passCaretUpdate(evt);
            }
        });

        jLabel3.setText("Nhập lại mật khẩu");

        jLabel2.setText("Mật khẩu");

        lblCheck.setText("    ");

        btnHuy.setText("Hủy Bỏ");

        jLabel4.setText("Nhóm");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblPhoto, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel23)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel24)
                                .addComponent(lblCauHoi)
                                .addComponent(jLabel4)))
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)
                                .addComponent(jButton1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(120, 120, 120)
                                .addComponent(lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(pass, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)
                                .addComponent(lblDoManh, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(pass2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)
                                .addComponent(lblCheck, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jCbNhom, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jCbCauHoi, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtCauHoi, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE)
                                .addComponent(txtTraLoi, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(311, 311, 311)
                        .addComponent(btnThem)
                        .addGap(11, 11, 11)
                        .addComponent(btnHuy)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(lblPhoto, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addGap(36, 36, 36)
                                        .addComponent(jLabel2)
                                        .addGap(26, 26, 26)
                                        .addComponent(jLabel3)
                                        .addGap(26, 26, 26)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel23)
                                            .addComponent(jCbCauHoi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jButton1))
                                        .addGap(7, 7, 7)
                                        .addComponent(lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(pass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblDoManh))
                                        .addGap(20, 20, 20)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(pass2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblCheck))))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblCauHoi)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtCauHoi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(txtTraLoi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel24))))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(jCbNhom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnThem)
                    .addComponent(btnHuy))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            try {
                if (!Cl_Client.c.checkUser(txtUsername.getText()) || txtUsername.getText().length() <= 3) {
                    Cl_Client.ShowError("Đã tồn tại tên đăng nhập ! Vui lòng chọn tên khác");
                    return;
                }
            } catch (RemoteException ex) {
                Logger.getLogger(Pnl_CauHoi.class.getName()).log(Level.SEVERE, null, ex);
            }

            if (txtUsername.getText().equals("") || pass.getText().equals("") || pass2.getText().equals("") || txtHoTen.getText().equals("")) {
                Cl_Client.ShowError("Hãy nhập đầy đủ thông tin !");
                return;
            }
            if (!pass.getText().equals(pass2.getText())) {
                Cl_Client.ShowError("Sai password rồi !");
                return;
            }

            if (jCbCauHoi.getSelectedIndex() == 0) {
                Cl_Client.ShowError("Bạn phải chọn 1 câu hỏi bí mật !!!");
                return;
            }

            if (jCbCauHoi.getSelectedIndex() == 7 && txtCauHoi.getText().equals("")) {
                Cl_Client.ShowError("Bạn hãy nhập nội dung câu hỏi !!!");
                return;
            }

            if (txtTraLoi.getText().equals("")) {
                Cl_Client.ShowError(" Hãy nhập câu trả lời !!!");
                return;
            }
            if (txtTraLoi.getText().length() < 2) {
                Cl_Client.ShowError(" Câu trả lời có ít nhất 2 ký tự!!!");
                return;
            }


            String cauhoi = "";
            if (jCbCauHoi.getSelectedIndex() != 7) {
                cauhoi = jCbCauHoi.getSelectedItem().toString();
            } else {
                cauhoi = txtCauHoi.getText();
            }

            String traloi = txtTraLoi.getText();


            String fullName = txtHoTen.getText();
            String address = txtDiaChi.getText();
            String city = "";
            if (jCbCity.getSelectedIndex() != 0) {
                city = jCbCity.getSelectedItem().toString();
            }
            SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
            String birthday = sdf.format(jDate.getDate());
            String email = txtEmail.getText();
            String phone = txtDienThoai.getText();
            boolean enable = true;
            byte[] image = getDataImages();
            Date d = new Date();
            String dateJoint = sdf.format(d);
            Long idGroup = null;
            if (checkGroup()){
                GroupUser gr = Cl_Client.c.getAllGroup().get(0);
                idGroup = gr.getGroupID();
            } else {
                GroupUser gr = (GroupUser) jCbNhom.getSelectedItem();
                idGroup = gr.getGroupID();
            }
            
            Users u = new Users(txtUsername.getText().trim(), pass.getText(), idGroup, fullName, birthday, address, city,
                    email, phone, image, dateJoint, dateJoint, enable , cauhoi, traloi);
            if (Cl_Client.c.insertUser(u)) {
                JOptionPane.showMessageDialog(null, "Đăng ký thành công . Vui lòng đăng nhập ! ");
                resetAll();
                this.dispose();
                new FrmLogon().show();
            } else {
                JOptionPane.showMessageDialog(null, "Đăng ký lỗi ");
            }
        } catch (Exception ex) {
            Logger.getLogger(Pnl_TaiKhoan.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            if (Cl_Client.c.checkUser(txtUsername.getText()) && txtUsername.getText().length() >= 4) {
                lbl.setForeground(Color.BLUE);
                lbl.setText("Có thể sử dụng");
            } else {
                lbl.setForeground(Color.RED);
                lbl.setText("Đã tồn tại!!!");
            }

        } catch (RemoteException ex) {
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void passCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_passCaretUpdate
        // TODO add your handling code here:
        if (pass.getText().length() < 5) {
            lblDoManh.setForeground(new java.awt.Color(51, 102, 255));
            lblDoManh.setText("Yếu");
        }

        if (pass.getText().length() >= 5 && pass.getText().length() <= 7) {
            lblDoManh.setForeground(Color.BLUE);
            lblDoManh.setText("Trung Bình");
        }
        if (pass.getText().length() >= 8) {
            lblDoManh.setForeground(Color.RED);
            lblDoManh.setText("Mạnh");
        }
    }//GEN-LAST:event_passCaretUpdate

    private void pass2CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_pass2CaretUpdate
        // TODO add your handling code here:
        if (pass.getText().equals(pass2.getText())) {
            lblCheck.setText("OK");
        } else {
            lblCheck.setText("Sai");
        }
    }//GEN-LAST:event_pass2CaretUpdate

    private void jCbCauHoiItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCbCauHoiItemStateChanged
        // TODO add your handling code here:
        int id = jCbCauHoi.getSelectedIndex();

        if (id == 7) {
            lblCauHoi.setVisible(true);
            txtCauHoi.setVisible(true);
        } else {
            lblCauHoi.setVisible(false);
            txtCauHoi.setVisible(false);
        }
    }//GEN-LAST:event_jCbCauHoiItemStateChanged

    private void lblPhotoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblPhotoMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
            loadImage();
        }
    }//GEN-LAST:event_lblPhotoMouseClicked
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHuy;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox jCbCauHoi;
    private javax.swing.JComboBox jCbCity;
    private javax.swing.JComboBox jCbNhom;
    private com.toedter.calendar.JDateChooser jDate;
    private com.toedter.calendar.JDayChooser jDayChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JLabel lbl;
    private javax.swing.JLabel lblCauHoi;
    private javax.swing.JLabel lblCheck;
    private javax.swing.JLabel lblDoManh;
    private javax.swing.JLabel lblPhoto;
    private javax.swing.JPasswordField pass;
    private javax.swing.JPasswordField pass2;
    private javax.swing.JTextField txtCauHoi;
    private javax.swing.JTextField txtDiaChi;
    private javax.swing.JTextField txtDienThoai;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtHoTen;
    private javax.swing.JTextField txtTraLoi;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables

    private void resetAll() {
        txtUsername.setText("");
        pass.setText("");
        pass2.setText("");
        txtHoTen.setText("");

        txtDiaChi.setText("");
        lbl.setText("");
        lblDoManh.setText("Điền mật khẩu");
        lblCheck.setText("Sai");

        jCbCauHoi.setSelectedIndex(0);
        txtTraLoi.setText("");
        txtCauHoi.setText("");


        txtHoTen.setText("");
        txtDiaChi.setText("");
        jCbCity.setSelectedIndex(0);

        txtEmail.setText("");
        txtDiaChi.setText("");
        txtDienThoai.setText("");

        jDate.setDate(null);
        dataImages = null;
        showImage();
    }

    private void loadPanel() {
        // Thiết lập nhóm
        jCbNhom.removeAllItems();
        try {
            List<GroupUser> lst = Cl_Client.c.getAllGroup();
            for (GroupUser gr : lst){
                if (gr.getAccessManager() == Session.STUDENT ){
                    jCbNhom.addItem(gr);
                }
            }
        } catch (RemoteException ex) {
            Logger.getLogger(FrmDKTaiKhoan.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        // Tao table co so du lieu
        jCbCity.removeAllItems();
        jCbCity.addItem("Lựa Chọn");
        jCbCity.addItem("Hà Nội");
        jCbCity.addItem("TP. Hồ Chí Minh");
        jCbCity.addItem("Huế");
        jCbCity.addItem("Đà Nẵng");
        jCbCity.addItem("Hải Phòng");
        jCbCity.addItem("Bắc Giang");
        jCbCity.addItem("Khác");



        // Câu Hỏi bí mật
        jCbCauHoi.removeAllItems();
        jCbCauHoi.addItem("Chọn một?");
        jCbCauHoi.addItem("Cha của bạn sinh ra ở thành phố nào ?");
        jCbCauHoi.addItem("Tên trường tiểu học của bạn là gì ?");
        jCbCauHoi.addItem("Con vật cưng đầu tiên của bạn tên gì ?");
        jCbCauHoi.addItem("Nhân vật trong phim mà bạn thích nhất là ai ?");
        jCbCauHoi.addItem("Tên nhạc sĩ bạn thích nhất ?");
        jCbCauHoi.addItem("Món khoái khẩu lúc bạn còn nhỏ là gì ?");
        jCbCauHoi.addItem("-- Nhập câu hỏi của bạn tại đây --");

        lblCauHoi.setVisible(false);
        txtCauHoi.setVisible(false);

    }

/////////////////////////////////   Xu ly Image  /////////////////////////////////
    private void loadImage() {
        JFileChooser fileChoise = new JFileChooser();

        fileChoise.setVisible(true);
        fileChoise.showOpenDialog(this);
        File file = fileChoise.getSelectedFile();
        if (file == null) {
            return;
        }
        if (file.length() > 1024 * 1024) {
            JOptionPane.showMessageDialog(null, "file anh qua lon");
            return;
        }
        try {
            BufferedImage biold = ImageIO.read(file);
            BufferedImage bi = new BufferedImage(lblPhoto.getSize().height, lblPhoto.getSize().width, BufferedImage.TYPE_INT_RGB);
            Graphics2D grap = bi.createGraphics();
            grap.drawImage(biold, 0, 0, lblPhoto.getSize().width, lblPhoto.getSize().height, null);
            ByteArrayOutputStream baos = new ByteArrayOutputStream();
            ImageIO.write(bi, "jpg", baos);
            dataImages = baos.toByteArray();
            showImage();
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "Khong luu duoc anh");
            return;
        }
    }
    private Icon icon;

    public void showImage() {
        if (dataImages == null) {
            lblPhoto.setText("Anh");
            lblPhoto.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
            icon = new ImageIcon();
            lblPhoto.setIcon(icon);
            lblPhoto.setVisible(true);
        } else {
            lblPhoto.setText("");
            lblPhoto.setBorder(null);
            icon = new ImageIcon(dataImages);
            lblPhoto.setIcon(icon);
            lblPhoto.setVisible(true);
        }
    }

    public void setDataImages(byte[] dataImages) {
        this.dataImages = dataImages;
    }

    private boolean checkGroup() {
        try {
            int totalGroup = Cl_Client.c.getAllGroup().size();
            if (totalGroup == 0) {
                insertAdminGroup();
                return true;
            } else return false;
        } catch (RemoteException ex) {
            Logger.getLogger(FrmDKTaiKhoan.class.getName()).log(Level.SEVERE, null, ex);
            return false;
        }
    }

    private void insertAdminGroup() {
        GroupUser bean = new GroupUser();
        bean.setGroupName("Admin");
        bean.setStatus(true);
        bean.setGroupDescription("Admin");
        try {
            Cl_Client.c.insertGroupUser(bean);
        } catch (RemoteException ex) {
            Logger.getLogger(FrmDKTaiKhoan.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
