

import java.rmi.RemoteException;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import org.jdesktop.swingx.decorator.*;
import vn.com.dva.entities.Exam;
import vn.com.dva.entities.Exam_Question;
import vn.com.dva.entities.Question;
import vn.com.dva.entities.Subject;
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Frm_GiaoVien.java
 *
 * Created on Aug 20, 2011, 3:38:52 PM
 */

/**
 *
 * @author VietAnh
 */
public class Frm_GiaoVien extends javax.swing.JFrame {

    //static List<Question> questionExam  = new ArrayList<Question>();
    DefaultListModel model = new DefaultListModel();
    DefaultListModel model1 = new DefaultListModel();
    /** Creates new form Frm_GiaoVien */
    public Frm_GiaoVien() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel8 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jListCauHoiKyThi = new javax.swing.JList();
        jScrollPane4 = new javax.swing.JScrollPane();
        jListTatCaCauHoi = new javax.swing.JList();
        jLabel16 = new javax.swing.JLabel();
        jCbDanhSachMonHoc = new javax.swing.JComboBox();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jCbDanhSachKyThi = new javax.swing.JComboBox();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        lblSoCauHoiMonHoc = new javax.swing.JLabel();
        lblSoCauHoiToiDa = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        lblSoCauHoi = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 740, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 536, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jTabbedPane1.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 832, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 620, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab(" Trang Chủ  ", new javax.swing.ImageIcon(getClass().getResource("/resource/home1.png")), jPanel8); // NOI18N

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 832, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 620, Short.MAX_VALUE)
        );

        jPanel7 = new Pnl_KyThi();

        jTabbedPane1.addTab("Kỳ Thi           ", new javax.swing.ImageIcon(getClass().getResource("/resource/Ky Thi.png")), jPanel7); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 832, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 620, Short.MAX_VALUE)
        );

        jPanel2 = new Pnl_DoKho();

        jTabbedPane1.addTab("Độ Khó         ", new javax.swing.ImageIcon(getClass().getResource("/resource/Do Kho.png")), jPanel2); // NOI18N

        jPanel10.setAutoscrolls(true);

        jButton1.setText("<<");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jListCauHoiKyThi.setModel(model);
        jListCauHoiKyThi.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jListCauHoiKyThi.setInheritsPopupMenu(true);
        jListCauHoiKyThi.setVerifyInputWhenFocusTarget(false);
        jListCauHoiKyThi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListCauHoiKyThiMouseClicked(evt);
            }
        });
        jListCauHoiKyThi.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListCauHoiKyThiValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(jListCauHoiKyThi);

        jListTatCaCauHoi.setModel(model1);
        jListTatCaCauHoi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListTatCaCauHoiMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jListTatCaCauHoi);

        jLabel16.setText("Môn Học");

        jCbDanhSachMonHoc.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCbDanhSachMonHocItemStateChanged(evt);
            }
        });

        jLabel17.setText("Số câu hỏi lấy ra thi");

        jLabel18.setText("Danh sách các kỳ thi");

        jCbDanhSachKyThi.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCbDanhSachKyThiItemStateChanged(evt);
            }
        });

        jButton2.setText("Xóa");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Tự Động Tạo Câu Hỏi");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Xóa Hết");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Random");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        lblSoCauHoiMonHoc.setText("0");

        lblSoCauHoiToiDa.setText("0");

        jLabel19.setText("Số câu hỏi có sẵn");

        lblSoCauHoi.setText("        ");

        jLabel1.setText("Số Câu Hỏi");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 365, Short.MAX_VALUE)
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel18)
                                    .addComponent(jLabel17)
                                    .addComponent(jLabel19))
                                .addGap(26, 26, 26)
                                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblSoCauHoi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblSoCauHoiToiDa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jCbDanhSachKyThi, 0, 172, Short.MAX_VALUE))))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(jButton5))
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel16)
                                    .addComponent(jLabel1))
                                .addGap(40, 40, 40)
                                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblSoCauHoiMonHoc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jCbDanhSachMonHoc, 0, 169, Short.MAX_VALUE))
                                .addGap(34, 34, 34)))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                        .addComponent(jButton3)
                        .addGap(341, 341, 341))))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel18)
                                    .addComponent(jCbDanhSachKyThi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel17)
                                    .addComponent(lblSoCauHoiToiDa))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel19)
                                    .addComponent(lblSoCauHoi)))
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jCbDanhSachMonHoc, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel16))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblSoCauHoiMonHoc)
                                    .addComponent(jLabel1))))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 459, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(207, 207, 207)
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2)
                        .addGap(18, 18, 18)
                        .addComponent(jButton4)
                        .addGap(18, 18, 18)
                        .addComponent(jButton5)))
                .addGap(11, 11, 11)
                .addComponent(jButton3)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Thêm Câu Hỏi", new javax.swing.ImageIcon(getClass().getResource("/resource/KyThiCauHoi.png")), jPanel10); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 832, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 620, Short.MAX_VALUE)
        );

        jPanel3 = new Pnl_CauHoi();

        jTabbedPane1.addTab(" Câu Hỏi        ", new javax.swing.ImageIcon(getClass().getResource("/resource/cau hoi.png")), jPanel3); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 832, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 620, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Chat           ", new javax.swing.ImageIcon(getClass().getResource("/resource/Comment.png")), jPanel4); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 991, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 625, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowActivated

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        try {
            jCbDanhSachKyThi.removeAllItems();
            jCbDanhSachMonHoc.removeAllItems();
            // Danh sach cac cau hoi list 1
            List<Question> lst = Cl_Client.c.getAllQuestion();
            for(int i=0;i<lst.size(); i++)
                model1.addElement(lst.get(i));
            
            // Danh sach cac ky thi
            jCbDanhSachKyThi.addItem("Lựa Chọn");
            List<Exam> lstE = Cl_Client.c.getAllExam();
            for (int i =0; i< lstE.size() ;i++)
                jCbDanhSachKyThi.addItem(lstE.get(i));

            List<Subject> lstS = Cl_Client.c.getAllSubject();
            jCbDanhSachMonHoc.addItem("Tất Cả");
            for (int i =0; i< lstS.size() ;i++)
                jCbDanhSachMonHoc.addItem(lstS.get(i));
            
        } catch (RemoteException ex) {
            
        }




    }//GEN-LAST:event_formWindowOpened

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if (jListTatCaCauHoi.getSelectedIndex() < 0)
        {
            Cl_Client.ShowError("Bạn chưa chọn 1 câu hỏi nào !");
            return ;
        }
        if (jCbDanhSachKyThi.getSelectedItem().equals("Lựa Chọn"))
        {
            Cl_Client.ShowError("Bạn chưa chọn kỳ thi nào !");
            return ;
        }
        try {
            Exam exam = (Exam) jCbDanhSachKyThi.getSelectedItem();
            Question question = (Question) jListTatCaCauHoi.getSelectedValue() ;
            Exam_Question eq = Cl_Client.c.getExamQuestionByExamQuestion(exam.getExamID(), question.getQuestionID());
            if (eq != null)
            {
                Cl_Client.ShowError("Câu hỏi đã có trong kỳ thi này . Chọn câu khác !");
                return ;
            }
            Exam_Question bean = new Exam_Question(exam.getExamID(), question.getQuestionID());
            boolean k1 = Cl_Client.c.insertExamQuestion(bean);
            if (k1)
            {
                loadList();
            }  
        } catch (RemoteException ex) {
            
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jCbDanhSachKyThiItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCbDanhSachKyThiItemStateChanged
        try {
            // TODO add your handling code here:
            model.clear();
            if (evt.getItem().toString().equals("Lựa Chọn") || jCbDanhSachKyThi.getSelectedIndex() == 0)
            {
                return ;
            }
            JOptionPane.showMessageDialog(null, evt.getItem());
            Exam exam = (Exam) evt.getItem();
            List<Exam_Question> lst = Cl_Client.c.getAllExamQuestionByExam(exam.getExamID());
            if (lst.size() <= 0) {
                return;
            }
            else
            {
                lblSoCauHoi.setText(lst.size()+"");
                if (exam.getNumberQuestion() == 0) lblSoCauHoiToiDa.setText("Không giới hạn");
                else lblSoCauHoiToiDa.setText(exam.getNumberQuestion()+"");
                for (int i=0;i<lst.size(); i++)
                {
                    Long idQuestion = lst.get(i).getQuestionID();
                    model.addElement(Cl_Client.c.getQuestiontByID(idQuestion));
                }
            }
        } catch (RemoteException ex) {
            
        }


    }//GEN-LAST:event_jCbDanhSachKyThiItemStateChanged

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if (jListCauHoiKyThi.getSelectedIndex() < 0 )
            Cl_Client.ShowError("Bạn chưa chọn câu hỏi nào");
        else
        {
            try {
                Exam e = (Exam) jCbDanhSachKyThi.getSelectedItem();
                Question q = (Question) jListCauHoiKyThi.getSelectedValue();
                Exam_Question eq = Cl_Client.c.getExamQuestionByExamQuestion(e.getExamID(), q.getQuestionID());
                boolean k = Cl_Client.c.removeExamQuestion(eq.getExamQuestionID());
                if (k)
                {
                    loadList();
                }
            } catch (RemoteException ex) {
                
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jCbDanhSachMonHocItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCbDanhSachMonHocItemStateChanged
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            model1.clear();
            if (evt.getItem().toString().equals("Tất Cả"))
            {
                List<Question> allQuestion = Cl_Client.c.getAllQuestion();
                for(int i=0;i< allQuestion.size() ;i++)
                    model1.addElement(allQuestion.get(i));
                lblSoCauHoiMonHoc.setText(""+allQuestion.size());
                return ;
            }
            
            Subject subject = (Subject) evt.getItem();
            List<Question> lstSQ = Cl_Client.c.getAllQuestionBySubject(subject.getSubjecId());
            if (lstSQ.size() <= 0) {
                return;
            }
            else
            {
                lblSoCauHoiMonHoc.setText(""+lstSQ.size());
                for (int i=0;i< lstSQ.size(); i++)
                {
                    model1.addElement(lstSQ.get(i));
                }
            }
        } catch (RemoteException ex) {
            
        }
    }//GEN-LAST:event_jCbDanhSachMonHocItemStateChanged

    private void jListCauHoiKyThiValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListCauHoiKyThiValueChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jListCauHoiKyThiValueChanged

    private void jListCauHoiKyThiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListCauHoiKyThiMouseClicked
        // TODO add your handling code here:
//        if (evt.getClickCount() == 2) {
//           int index = jListCauHoiKyThi.locationToIndex(evt.getPoint());
//            try {
//                //Cl_Client.ShowSuccess("OK  "+ values[jListCauHoiKyThi.getSelectedIndex()]);
//                boolean k = Cl_Client.c.deleteKyThiCauHoi(values[index]);
//                if (k)
//                {
//                    loadList();
//                }
//            } catch (RemoteException ex) {
//                
//            }
//        }
    }//GEN-LAST:event_jListCauHoiKyThiMouseClicked

    private void jListTatCaCauHoiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListTatCaCauHoiMouseClicked
        // TODO add your handling code here:
//        if (evt.getClickCount() == 2) {
//           int index = jListTatCaCauHoi.locationToIndex(evt.getPoint());
//
//           if (jCbDanhSachKyThi.getSelectedItem().equals("Lựa Chọn"))
//            {
//                Cl_Client.ShowError("Bạn chưa chọn kỳ thi nào !");
//                return ;
//            }
//            try {
//                String idKyThi = Cl_Client.c.getItemKyThi(jCbDanhSachKyThi.getSelectedItem().toString(), 1);
//                String idCauHoiChon = values1[index] ;
//                boolean k = Cl_Client.c.checkKyThiCauHoi(idKyThi, idCauHoiChon) ;
//                if (!k)
//                {
//                    Cl_Client.ShowError("Câu hỏi đã có trong kỳ thi này . Chọn câu khác !");
//                    return ;
//                }
//                boolean k1 = Cl_Client.c.addKyThiCauHoi(idKyThi, idCauHoiChon);
//                if (k1)
//                {
//                    loadList();
//                }
//            } catch (RemoteException ex) {
//                
//            }
//
//
//        }
    }//GEN-LAST:event_jListTatCaCauHoiMouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        if (jCbDanhSachKyThi.getSelectedItem().equals("Lựa Chọn"))
        {
            Cl_Client.ShowError("Bạn chưa chọn kỳ thi nào !");
            return ;
        }
        try {
            Exam exam = (Exam) jCbDanhSachKyThi.getSelectedItem();
            List<Question> lstQuestion  = Cl_Client.c.getAllQuestionBySubject(exam.getSubjectID());
            for (Question q : lstQuestion){
                Exam_Question eq = Cl_Client.c.getExamQuestionByExamQuestion(exam.getExamID(), q.getQuestionID());
                if (eq == null){
                    Exam_Question bean = new Exam_Question(exam.getExamID(), q.getQuestionID());
                    Cl_Client.c.insertExamQuestion(bean);
                }                
            }

            loadList();
        } catch (RemoteException ex) {
            
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        if (jCbDanhSachKyThi.getSelectedItem().equals("Lựa Chọn"))
        {
            Cl_Client.ShowError("Bạn chưa chọn kỳ thi nào !");
            return ;
        }
        try {
                Exam e = (Exam) jCbDanhSachKyThi.getSelectedItem();
                List<Exam_Question> lst = Cl_Client.c.getAllExamQuestionByExam(e.getExamID());
                for (Exam_Question eq : lst){
                    Cl_Client.c.removeExamQuestion(eq.getExamQuestionID());
                }
                loadList();
            } catch (RemoteException ex) {
                
            }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        if (jCbDanhSachKyThi.getSelectedItem().equals("Lựa Chọn"))
        {
            Cl_Client.ShowError("Bạn chưa chọn kỳ thi nào !");
            return ;
        }
        try {
            Exam exam = (Exam) jCbDanhSachKyThi.getSelectedItem();
            List<Question> lstQuestion  = Cl_Client.c.getAllQuestionBySubject(exam.getSubjectID());
            if (Cl_Client.c.getAllExamQuestionByExam(exam.getExamID()).size() == lstQuestion.size() ) {
                JOptionPane.showMessageDialog(null, " Hết câu hỏi");
                return;
            }
            boolean ok = false ;
            while (!ok){
                Random random = new Random();
                int i = random.nextInt(lstQuestion.size()-1)+1;
                Question q = lstQuestion.get(i);
                Exam_Question eq = Cl_Client.c.getExamQuestionByExamQuestion(exam.getExamID(), q.getQuestionID());
                if (eq == null){
                    Exam_Question bean = new Exam_Question(exam.getExamID(), q.getQuestionID());
                    Cl_Client.c.insertExamQuestion(bean);
                    ok = true;
                }                
            }

            loadList();
        } catch (RemoteException ex) {
            
        }
    }//GEN-LAST:event_jButton5ActionPerformed


    public void loadList()
    {
        try {
            model.clear();
            Exam exam = (Exam) jCbDanhSachKyThi.getSelectedItem();
            
            List<Exam_Question> lst = Cl_Client.c.getAllExamQuestionByExam(exam.getExamID());
            if (lst.size() <= 0) {
                return;
            }
            else
            {
                for (int i=0;i<lst.size(); i++)
                {
                    Long idQuestion = lst.get(i).getQuestionID();
                    model.addElement(Cl_Client.c.getQuestiontByID(idQuestion));
                }
            }
        } catch (RemoteException ex) {
            Logger.getLogger(Frm_GiaoVien.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    @SuppressWarnings("static-access")
    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Frm_GiaoVien().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JComboBox jCbDanhSachKyThi;
    private javax.swing.JComboBox jCbDanhSachMonHoc;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JList jListCauHoiKyThi;
    private javax.swing.JList jListTatCaCauHoi;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblSoCauHoi;
    private javax.swing.JLabel lblSoCauHoiMonHoc;
    private javax.swing.JLabel lblSoCauHoiToiDa;
    // End of variables declaration//GEN-END:variables

}
